name: Upload JSON Files

on:
  push:
    branches:
      - main

jobs:
  upload-json-files:
    runs-on: ubuntu-latest
    env:
      GIT_REPO: https://github.com/0x30c4/testpipe
      UPLOAD_API_URL: http://159.223.68.108:9091/v1/webHook
      APPKEYTOKEN: hello

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for detecting file changes

    - name: Set up Git
      run: git config --global --add safe.directory "${{ github.workspace }}"

    - name: Identify Changed .json Files
      id: changed-files
      run: |
        # Identify changed .json files in the latest commit
        # git diff-tree --no-commit-id --name-only -r HEAD | grep '\.json' > changed_files.txt
        echo Haircut.json > changed_files.txt
        changedFiles=$(cat changed_files.txt | grep -v '^$')
        echo $changedFiles

        # If no .json files are changed, exit successfully
        if [[ -z "$changedFiles" ]]; then
          echo "No .json files changed, exiting."
          exit 0
        fi

        echo "JSON Files changed: $changedFiles"
        echo "CHANGED_FILES=$changedFiles" >> $GITHUB_ENV

    - name: Process Changed JSON Files
      run: |
        changedFiles=$(echo "$CHANGED_FILES" | tr ' ' '\n')
        for file in $changedFiles; do
          if [ -f "$file" ]; then
            echo "Processing file: $file"
          else
            echo "File not found: $file"
          fi
        done

    - name: Upload Changed JSON Files
      run: |
        changedFiles=$(echo "$CHANGED_FILES" | tr ' ' '\n')
        for file in $changedFiles; do
          if [ -f "$file" ]; then
            echo "Uploading file: $file"
            response=$(curl --location "${UPLOAD_API_URL}" \
              --header "Accept: application/json, text/plain, */*" \
              --header "Authorization: Bearer ${APPKEYTOKEN}" \
              --form "filename=file.json" \
              --form "file=@${file}")
            echo "Upload response: $response"
          else
            echo "File not found: $file"
          fi
        done

    - name: Post-processing
      run: echo "Post-processing steps"

    - name: Clean workspace
      run: rm -rf *
